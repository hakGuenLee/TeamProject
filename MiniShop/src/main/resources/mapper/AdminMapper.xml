<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ezen.team.mapper.admin.AdminMapper">

<!-- 관리자 테이블의 총 개수 구하기 -->
<select id="totalCnt" resultType="Integer">
select count(*) from admin_master
</select>

<!-- 관리자 로그인 정보 확인 -->
<select id="findByusername" resultType="AdminDTO">
select * from admin_master where adm_id = #{username}
</select>

<!-- 관리자 등록 -->
<insert id="adminRegister">
INSERT INTO admin_master (adm_id, adm_nm, adm_vnm, adm_pw, emp_id, use_yn, proc_dt, mod_dt, exp_dt, proc_id,mod_id,exp_id, role)
values(#{adm_id}, #{adm_nm}, #{adm_vnm}, #{adm_pw}, #{emp_id}, #{use_yn},
#{proc_dt}, #{mod_dt}, #{exp_dt}, #{proc_id}, #{mod_id}, #{exp_id}, #{role}
);
</insert>

<!-- 검색한 관리자의 사번 가져오기 -->
<select id="getEmp" resultType="String">
select emp_id, emp_nm from emp_info where emp_nm = #{name}
</select>

<!-- 관리자 리스트 가져오기 -->
<select id="getAdminList" resultType="AdminDTO">
SELECT * FROM admin_master
ORDER BY adm_id DESC
LIMIT #{startIndex}, #{cntPerPage}
</select>

<!-- 관리자 삭제 -->
<delete id="adminDelete">
delete from admin_master where adm_id = #{id}
</delete>

<!-- 수정할 관리자 정보 가져오기 -->
<select id="getAdminInfo" resultType="AdminDTO">
select * from admin_master where adm_id = #{id}
</select>

<!-- 관리자 정보 수정하기 -->
<update id="adminUpdate">
update admin_master set adm_vnm = #{adm_vnm}, adm_pw = #{adm_pw}, role = #{role},
use_yn = #{use_yn} where adm_id = #{adm_id}
</update>

<!-- 관리자 등록 시 아이디 유효성 검사 -->
<select id="adminIdCheck" resultType="AdminDTO">
select * from admin_master
where adm_id = #{id}
</select>

<!-- 관리자 등록 시 닉네임 유효성 체크 -->
<select id="checkNickName" resultType="Integer">
select count(*) from admin_master where adm_vnm = #{vnm}
</select>


<!-- 회원 리스트 가져오기 -->
<select id="getUserList" resultType="hashmap">
select * from user_master
ORDER BY user_no DESC
LIMIT #{startIndex}, #{cntPerPage}
</select>

<!-- 회원 정보 가져오기 -->
<select id="getUserInfo" resultType="UserDTO">
select * from user_master where user_no = #{no}
</select>

<!-- 회원정보 수정하기 -->
<update id="userUpdate">
update user_master 
set user_email = #{user_email}, zipcode = #{zipcode}, 
addr_road = #{addr_road}, 
addr = #{addr}, 
addr_detail = #{addr_detail}
where user_no = #{user_no}
</update>

<!-- 회원 검색하기 -->
<select id="searchUser" resultType="UserDTO">
select * from user_master 
where user_nm like CONCAT('%', #{search}, '%')
or user_id like CONCAT('%', #{search}, '%')
or user_phone like CONCAT('%', #{search}, '%')
</select>

</mapper>