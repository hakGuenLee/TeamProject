<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ezen.team.mapper.OrderMapper">


<!-- <insert id="inputOrder"  parameterType="List">
INSERT INTO order_master(user_id,tot_qty)
 VALUES
<foreach item="item" collection="list" separator=",">
 ( #{item.user_id},
#{item.qty}
)
</foreach>
</insert> -->

<!-- 주문 리스트 가져오기 -->
<select id="getOrderList" resultType="CartDTO">
SELECT c.user_id, c.prod_no, p.main_img, p.prod_nm, c.cart_no, c.qty, p.price, p.point, c.buy_yn
FROM prod_master AS p LEFT OUTER JOIN cart AS c 
ON p.prod_no = c.prod_no
WHERE c.user_id = #{id} AND c.buy_yn='Y'
</select>

<!-- 카트 상품 buy_yn을 Y로 바꾸기   -->
<update id="inputOrder">
UPDATE cart
SET
buy_yn = 'Y'
WHERE cart_no = #{prod_no}
</update>

<!-- 주문페이지 삭제 시 카트 상품 buy_yn을 N로 바꾸기   -->
<update id="orderDelete">
UPDATE cart
SET
buy_yn = 'N'
WHERE cart_no = #{no}
</update>

<!-- 결제 시 주문 마스터에 정보 넣기  -->
<insert id="OMRegister">
INSERT INTO order_master(order_no, user_id, addr_no, order_sts)
VALUES
(#{order_no}, #{user_id}, '1', '결제완료')
</insert>
<!-- 유저테이블에 포인트 넣어주기  -->
<update id="userPoint">
UPDATE user_master
SET
point = point + #{point}
WHERE
user_id = #{user.user_id}
</update>


<!--  결제 시 주문 디테일에 정보 넣기 -->
<insert id="orderRegister"  parameterType="List">
INSERT INTO order_detail(user_id,prod_no,order_no,op_code,addr_no,price,qty,point,tot_price)
VALUES
<foreach item="item" collection="list" separator=",">
(#{item.user_id},#{item.prod_no},#{order_no},#{item.op_code},'1',#{item.price},#{item.qty},#{item.point}*#{item.qty},#{item.price}*#{item.qty})
</foreach>
</insert>

<!-- 결제 시 카트 테이블에서 상품 삭제하기  -->
<delete id="DeleteOrder" parameterType="List">
DELETE FROM cart
	<where> 
		<foreach collection="list" item="item" open="" close="" separator="OR"> 
		(cart_no = #{item.cart_no}) 
		</foreach> 
	</where> 
</delete>

<!-- 주문내역 가져오기  -->
<select id="getOrderInfo" resultType="OrderDTO">
SELECT * FROM order_master
WHERE
order_no = #{order_no}
</select>



<!-- 주문번호로 주문 디테일 가져오기  -->
<select id="getOrderDetail" resultType="OrderDTO">
SELECT pm.main_img, pm.prod_nm, od.qty, od.price, od.point
FROM 
order_detail od INNER JOIN prod_master pm on od.prod_no = pm.prod_no
WHERE
order_no = #{order_no}
</select>
<!-- 해당 아이디의 배송지 별칭 목록 가져오기 -->
<select id="getNickAddr" resultType="String">
select addr_nik from addr_manage where user_id = #{id} 
</select>

<!-- 해당 아이디의 별칭에 맞는 주소 가져오기  -->
<select id="getAddrInfo" resultType="AddrDTO">
select * from addr_manage where user_id = #{id} and addr_nik = #{nickname}
</select>

<!--기본주소 가져오기 -->
<select id="getDefaultAddr" resultType="AddrDTO">
select * from addr_manage where user_id = #{id} and addr_gb = #{addrName}
</select>

<!-- 주문 조회에서 날짜별로 조회하기  -->
<select id="dateSearch" resultType="OrderDTO">
    SELECT * FROM order_master
        WHERE user_id = #{user_id}
        <![CDATA[
        AND order_dt >= DATE_FORMAT(#{stt_ymd}, '%Y%m%d')
        AND order_dt < DATE_ADD(DATE_FORMAT(#{end_ymd}, '%Y%m%d'),INTERVAL +1 DAY)
      ]]>
      ORDER BY
order_no DESC
LIMIT #{pageDTO.startIndex}, #{pageDTO.cntPerPage}
</select>

<!-- 날짜별로 검색해서 가져온 리스트 개수 세기  -->
<select id="getCount" resultType="Integer">
SELECT count(*) FROM order_master
WHERE user_id = #{user_id}
<![CDATA[
AND order_dt >= DATE_FORMAT(#{stt_ymd}, '%Y%m%d')
AND order_dt < DATE_ADD(DATE_FORMAT(#{end_ymd}, '%Y%m%d'),INTERVAL +1 DAY)
]]>
</select>


</mapper>